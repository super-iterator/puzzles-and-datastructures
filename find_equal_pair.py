N = 586
A = "75 159 824 977 856 195 276 841 506 173 533 248 36 294 978 37 375 483 271 265 249 18 258 312 16 887 325 757 654 121 458 232 118 452 279 157 418 182 645 498 342 779 16 417 551 778 865 763 991 619 51 186 406 526 163 973 592 820 942 520 274 618 196 516 787 966 561 344 300 596 316 602 887 603 50 359 955 116 694 82 28 5 33 611 367 928 238 687 297 729 388 88 723 911 716 309 513 172 609 657 692 41 285 244 533 796 539 207 170 203 714 636 833 388 243 135 60 485 339 189 960 838 251 368 171 563 108 895 166 458 719 735 506 25 192 500 798 483 499 90 8 295 119 965 528 671 363 885 265 196 161 800 351 178 29 431 460 338 10 408 410 647 396 131 941 375 89 955 474 550 190 345 444 247 118 151 287 194 828 982 708 625 518 559 309 923 939 728 933 744 145 621 624 906 220 163 994 761 507 626 708 26 789 541 282 677 194 789 482 672 786 946 348 524 474 362 236 407 232 195 755 794 338 879 863 641 852 671 376 62 75 914 912 136 196 93 806 492 541 365 353 498 832 387 540 781 871 535 903 246 929 573 999 407 179 281 709 702 943 893 346 580 958 736 813 919 403 485 610 133 573 746 71 419 971 688 154 590 531 638 671 212 63 499 52 852 766 804 235 337 227 864 892 135 994 494 375 74 412 865 763 555 520 754 477 65 127 42 929 663 27 673 809 400 203 739 896 793 521 800 12 574 68 997 151 8 168 262 211 945 849 867 499 117 801 388 15 841 681 18 943 127 80 418 102 857 579 95 958 415 106 188 482 127 174 241 586 81 980 885 42 448 912 411 794 355 410 231 447 469 231 461 316 839 914 187 646 751 811 392 42 305 84 637 644 916 259 373 469 391 296 311 162 467 711 647 93 971 383 831 15 382 655 27 727 634 421 509 778 791 10 582 861 961 617 790 959 998 752 843 989 354 696 927 30 784 660 702 208 66 544 784 383 63 5 558 490 298 842 660 97 151 327 961 326 232 725 10 831 179 690 314 826 682 569 606 806 80 377 55 466 580 535 89 808 926 467 24 268 146 486 53 427 771 837 594 305 994 380 779 389 750 238 363 903 29 423 372 922 382 652 417 448 403 156 687 153 155 675 593 177 636 794 325 881 22 132 912 826 819 952 948 140 991 652 173 528 554 459 382 412 256 776 153 533 522 460 715 266 132 488 160 757 331 999 876 820 374 468 172 509 364 70 147 341 540 328 479 165 656 724 389 47 731 838 585 12 103 839 874 340 934 361 571 769 705 707 214 698 968 761 303 771 124 489 533 407 475 144 505 975 247 731 630 849 556"
B = "238 734 971 126 66 430 463 519 429 268 157 636 819 752 244 332 725 287 845 135 764 96 376 611 444 464 759 785 977 646 768 955 71 513 64 396 547 450 824 662 632 673 826 921 20 351 98 675 235 892 119 317 824 215 706 673 340 110 391 562 824 64 918 612 448 374 805 421 797 352 139 316 582 598 433 795 336 487 64 437 618 341 921 273 438 534 800 401 698 667 894 580 896 541 611 767 894 311 314 971 413 358 486 122 144 632 953 184 63 489 372 681 896 699 886 280 919 636 140 630 124 883 440 150 289 913 107 710 182 22 453 130 273 965 164 761 891 640 617 592 729 374 643 890 323 702 105 697 611 386 374 794 129 583 744 960 876 427 632 621 616 670 615 51 434 108 814 59 714 349 428 315 454 173 708 663 503 600 611 413 306 403 771 589 102 717 232 962 261 756 196 630 712 177 645 690 523 927 533 39 798 980 914 948 232 219 122 138 774 655 63 59 868 750 669 512 656 237 433 643 876 283 526 946 275 970 619 490 815 145 426 264 623 967 302 93 753 429 440 883 419 433 684 778 737 451 48 631 630 953 725 486 324 928 951 187 905 4 188 275 585 275 670 629 352 832 798 92 356 990 437 712 582 486 727 973 923 529 379 919 151 945 77 586 898 991 646 453 583 680 452 110 657 164 961 450 464 429 762 260 287 169 654 19 353 227 554 350 282 154 378 196 445 542 583 864 924 365 262 894 585 26 914 440 883 90 895 359 347 757 622 285 837 501 900 436 632 148 319 541 165 895 414 284 783 131 721 215 715 864 98 89 374 525 27 963 369 162 617 733 82 128 617 308 902 990 861 53 812 815 877 735 266 997 265 908 81 5 732 532 533 824 788 657 560 769 431 190 532 922 473 394 659 113 774 522 526 794 608 586 907 450 532 730 58 669 810 46 390 438 790 795 900 821 292 431 15 514 660 866 656 82 51 730 110 503 825 866 353 775 434 721 135 886 694 792 813 435 943 169 627 360 165 895 966 950 704 783 313 343 349 591 648 616 393 752 834 338 736 379 510 470 325 134 678 35 245 536 339 525 454 145 239 647 208 425 188 302 830 792 385 310 832 486 378 875 683 291 179 939 837 386 981 163 234 455 650 614 864 582 530 806 535 843 857 976 117 567 654 165 147 554 742 617 182 815 599 875 425 896 934 415 841 230 976 1000 341 962 744 686 794 676 711 97 410 866 145 544 253 66 288 519 975 701 733 601 32 195 162 869 588 519 320 252 220 484 530 682 878 119 51 98 712 400 248 997 895 421 872 695 428 736 974 199 356 539 470 417 784 632 236 451 435 822 694 247"


# Enter your code here. Read input from STDIN. Print output to STDOUT

# N = int( raw_input() )
# A = raw_input()
# B = raw_input()

A = A.split()[:N]
B = B.split()[:N]

count = 0

print 'Len B before: ' , len(B)

for i in A:
    for k,v in enumerate(B):
        if i == v:
            count+=1
            del B[k]

print B

print 'N', N
print 'Len B: ' , len(B)
print 'N - Len B' , N-len(B)
print 'N - count: ' , N - count
# if there are NO elements remining (all elements equal)            
if not len(B):
    print count-1
else:
    print count + 1